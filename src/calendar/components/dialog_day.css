/*   Open state of the dialog  */
.dialog-day[open] {
  opacity: 1;
  transform: scaleY(1);
}

/*   Closed state of the dialog   */
.dialog-day {
  opacity: 0;
  transform: scaleY(0);
  transition:
    opacity 0.7s ease-out,
    transform 0.7s ease-out,
    overlay 0.7s ease-out allow-discrete,
    display 0.7s ease-out allow-discrete;
  padding: 16px;

  header {
    display: flex;
    justify-content: flex-end;
  }
}

.content-photo {
  width: 100%;
  height: auto;
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  .dialog-day[open] {
    opacity: 0;
    transform: scaleY(0);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
.dialog-day::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition:
    display 0.7s allow-discrete,
    overlay 0.7s allow-discrete,
    background-color 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

.dialog-day[open]::backdrop {
  background-image: linear-gradient(45deg,
      magenta,
      rebeccapurple,
      dodgerblue,
      green);
  opacity: 0.75;
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  .dialog-day[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}